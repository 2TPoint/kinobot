import telebot
from telebot import types
import KinoMaster as km
import reply_keyboard
import parse_film
import parse_actor
from parse_film import *
from parse_actor import *
import wikipedia

token = open("token.txt").readline()
kino_token = open("kino_token.txt").readline()

bot = telebot.TeleBot(token)  # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
main_keyboard = reply_keyboard.make_keyboard()  # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞


# —Ñ—É–Ω–∫—Ü–∏—è –∞–ø–¥–µ–π—Ç–æ–≤ (–æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞—Ö–æ–¥—è—â–∏—Ö—Å—è –≤ –ë–î)
# def update():
#     f = open("db.txt", 'r')
#     for line in f.readlines():
#         id = line
#         bot.send_message(int(id), text='–ù–ï –ú–£–¢–¨ –ü–≠–ñ–≠')
#     f.close()
#
#
# update()

# –∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç
@bot.message_handler(commands=['start'])
def start(msg):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É '/start' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
        1. –î–æ–±–∞–≤–ª—è–µ—Ç id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞
        2. –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        3. –í—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–µ–∫—Å—Ç

    :param msg: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–≤–∑—Ä–∞—â–∞–µ—Ç
    """
    f = open("db.txt", 'r')
    data = ''
    for line in f.readlines():
        data += line
    f.close()
    if str(msg.from_user.id) not in data:
        f = open("db.txt", 'a')
        f.write(str(msg.from_user.id))
        f.write('\n')
        f.close()
    global main_keyboard
    keyboard = types.InlineKeyboardMarkup()  # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Å—ã–ª–æ–∫
    key_github = types.InlineKeyboardButton(text='–ù–∞—à GitHub', url='https://github.com/2TPoint')  # –∫–Ω–æ–ø–∫–∞ GitHub
    keyboard.add(key_github)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    welcome_text = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω —Å —Ü–µ–ª—å—é –æ–±–ª–µ–≥—á–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∏–Ω–æ–∏–Ω–¥—É—Å—Ç—Ä–∏–∏! " \
                   "–ë–æ—Ç —Å–æ–∑–¥–∞–Ω 2TPoint —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º api –ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞!!"
    bot.send_message(msg.from_user.id, text=welcome_text, reply_markup=keyboard)  # –≤—ã—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    menu_main(msg)


@bot.message_handler(content_types=['text'])
def main(msg):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤ –∑–∞–≤–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—Å—Ç–∞ –≤—ã–∑—ã–≤–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã

    :param msg: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–≤–∑—Ä–∞—â–∞–µ—Ç
    """
    if msg.text == '–ê–∫—Ç–µ—Ä—ã':
        search_actor(msg)
    if msg.text == '–ü–æ–¥–±–æ—Ä–∫–∏':
        menu_collections(msg)
    if msg.text == '–ü–æ–∏—Å–∫':
        search(msg)
    if msg.text == '–°–ª—É—á–∞–π–Ω—ã–µ —Ñ–∏–ª—å–º—ã':
        make_random_film_list(msg)


# –º–µ—Ç–æ–¥ –ø–æ–∏—Å–∫–∞
def search(msg):
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ—É–∫–Ω–∫—Ü–∏—é –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –º–µ–Ω—é –ø–æ–∏—Å–∫–∞ –∏ –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–∞ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –¥–≤–∏–∂–∫–∞

    :param msg: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–≤–∑—Ä–∞—â–∞–µ—Ç
    """
    main_keyboard = reply_keyboard.make_keyboard('–ü–æ–∏—Å–∫')
    bot.send_message(msg.from_user.id, text="–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é –ø–æ–∏—Å–∫–∞")
    bot.send_message(msg.from_user.id,
                     text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞, –∞ —è –≤—ã–¥–∞–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—â–∏—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º",
                     reply_markup=main_keyboard)
    bot.register_next_step_handler(msg, search_engine, '—Ñ–∏–ª—å–º')


# –ø–æ–∏—Å–∫ –ø–æ–∫–∞ –Ω–µ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
def search_engine(msg, type):
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ–∏–Ω–∫—Ü–∏—é –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –¥–≤–∏–∂–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç.

    :param msg: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param type: —Ç–∏–ø –ø–æ–∏—Å–∫–∞ (—Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª/–∞–∫—Ç–µ—Ä)
    :return: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–π–¥–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
    """
    wikipedia.set_lang("ru")
    if msg.text == '–ù–∞–∑–∞–¥':
        menu_main(msg)
        return
    if type == "–∞–∫—Ç–µ—Ä":
        keyboard = types.InlineKeyboardMarkup()
        actor = msg.text
        print(wikipedia.search(actor + ' –∞–∫—Ç–µ—Ä'))
        actor = actor.split(" ")
        actor = ' '.join(actor[1:]) + ', ' + actor[0]
        print(actor)
        if actor in wikipedia.search(actor + ' –∞–∫—Ç–µ—Ä'):
            acterURL = ActorURL().getPerson(wikipedia.page(actor).url)
            reply_text = "–ò–º—è –∞–∫—Ç–µ—Ä–∞: " + acterURL.getName() + \
                         '\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: ' + acterURL.getAge() + \
                         '\n\n–ù–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç –∏–∑ —Ñ–∏–ª—å–º–æ–≥—Ä–∞—Ñ–∏–∏ –∞–∫—Ç–µ—Ä–∞üé¨: ' + ', '.join(acterURL.getFilms()[:5]) + \
                         '\n\n–ù–∞–≥—Ä–∞–¥—ãüèÜ: ' + ', '.join(acterURL.getAwards())
            bot.send_photo(msg.from_user.id,
                           acterURL.getPicture(),
                           caption=reply_text,
                           reply_markup=keyboard)

        else:
            print(wikipedia.search(actor + ' –∞–∫—Ç–µ—Ä'))
            reply_text = "–ü–æ –∑–∞–ø—Ä–æ—Å—É \"" + actor + "\" –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
            bot.send_message(msg.from_user.id,
                             text=reply_text)
    else:
        keyboard = types.InlineKeyboardMarkup()
        print(wikipedia.search(str(msg.text) + ' —Ñ–∏–ª—å–º'))
        if str(msg.text) in wikipedia.search(str(msg.text) + ' —Ñ–∏–ª—å–º'):
            filmURL = FilmURL().getFilm(wikipedia.page(str(msg.text)).url)
            reply_text = filmURL.getTitle() + '\t' + filmURL.getDate()
            reply_text += '\t' + str(filmURL.getTime())
            reply_text += '\n' + str(filmURL.getActors())
            print(filmURL.getPicture())

            if (len(wikipedia.search(str(msg.text) + ' —Ñ–∏–ª—å–º')) > 1):
                wiki = wikipedia.search(str(msg.text) + ' —Ñ–∏–ª—å–º')
                for i in range(0, int(len(wiki) / 2 - 1)):
                    keyboard.add(types.InlineKeyboardButton(text=wiki[i], callback_data='film_' + wiki[i]))

                reply_text += '\n\n' + "–¢–∞–∫–∂–µ –±—ã–ª–∏ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∏–ª—å–º—ã\n"
            else:
                keyboard.add(types.InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç"))
            bot.send_photo(msg.from_user.id,
                           filmURL.getPicture(),
                           caption=reply_text,
                           reply_markup=keyboard)

        else:
            bot.send_photo(msg.from_user.id,
                           open("img_1.png", 'rb'),
                           caption="–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –∏–º–µ–ª–∏ –≤ –≤–∏–¥—É:\n" +
                                   str(wikipedia.search(str(msg.text) + ' —Ñ–∏–ª—å–º')[:5])
                           )
    bot.register_next_step_handler(msg, search_engine, type)


@bot.callback_query_handler(func=lambda call: True)
def ans(call):
    kb = types.InlineKeyboardMarkup()
    cid = call.message.chat.id
    mid = call.message.message_id
    if call.data[:5] == "film_":
        bot.send_message(call.message.chat.id, '–ò —á—Ç–æ –¥–∞–ª—å—à–µ?')
        # bot.edit_message_text(chat_id=cid, message_id=mid, text='New Text', reply_markup=kb, parse_mode='Markdown')


# –º–µ—Ç–æ–¥ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
def menu_main(msg):
    main_keyboard = reply_keyboard.make_keyboard()
    bot.send_message(msg.from_user.id, text="–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=main_keyboard)


# –º–µ—Ç–æ–¥ –º–µ–Ω—é –∫–æ–ª–ª–µ–∫—Ü–∏–π
def menu_collections(msg):
    main_keyboard = reply_keyboard.make_keyboard('–ü–æ–¥–±–æ—Ä–∫–∏')
    bot.send_message(msg.from_user.id, text="–ú–µ–Ω—é –ø–æ–¥–±–æ—Ä–æ–∫. –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –∂–∞–Ω—Ä.",
                     reply_markup=main_keyboard)
    bot.register_next_step_handler(msg, chooseGenre)
    return


# –º–µ—Ç–æ–¥ –≤—ã–±–æ—Ä–∞ –∂–∞–Ω—Ä–∞ –¥–ª—è –ø–æ–¥–±–æ—Ä–æ–∫
def chooseGenre(msg):
    if msg.text == '–ù–∞–∑–∞–¥':
        menu_main(msg)
        return
    bot.send_message(msg.from_user.id, text=f"–í–æ—Ç –∫–∞–∫–∏–µ —Ñ–∏–ª—å–º—ã —è –Ω–∞–∂–µ–ª –ø–æ –∂–∞–Ω—Ä—É '{msg.text}'")
    text = km.get_random_films(msg.text)
    bot.send_message(msg.from_user.id, text=text)
    bot.register_next_step_handler(msg, chooseGenre)


# –º–µ—Ç–æ–¥ –ø–æ–∏—Å–∫–∞ –∞–∫—Ç–µ—Ä–æ–≤
def search_actor(msg):
    main_keyboard = reply_keyboard.make_keyboard('–ê–∫—Ç–µ—Ä—ã')
    bot.send_message(msg.from_user.id, text="–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é –ø–æ–∏—Å–∫–∞")
    bot.send_message(msg.from_user.id,
                     text="–í–≤–µ–¥–∏—Ç–µ –∞–∫—Ç–µ—Ä–∞, –∞ —è –≤—ã–¥–∞–º –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º",
                     reply_markup=main_keyboard)
    bot.register_next_step_handler(msg, search_engine, '–∞–∫—Ç–µ—Ä')


def make_random_film_list(msg):
    s = ''
    movies = km.get_random_films()
    for movie in movies:
        s += movie.title + '\n'

    bot.send_message(msg.from_user.id, text=s)


bot.infinity_polling()  # –±–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –±–æ—Ç–∞
